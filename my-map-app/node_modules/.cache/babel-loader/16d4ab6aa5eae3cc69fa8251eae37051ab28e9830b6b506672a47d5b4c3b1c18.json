{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        const updatedLocations = {};\n        Object.entries(response.data).forEach(([user, data]) => {\n          const {\n            location,\n            speed\n          } = JSON.parse(data);\n          updatedLocations[user] = {\n            location: JSON.parse(location),\n            speed\n          };\n        });\n        setLocations(updatedLocations);\n        if (loggedIn) {\n          const userLocation = updatedLocations[username];\n          if (userLocation) {\n            setCurrentLocation(userLocation.location);\n            setSpeed(userLocation.speed);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude,\n            speed\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation({\n            location,\n            speed\n          });\n          setCurrentLocation(location);\n          setSpeed(speed);\n          setPath(prevPath => [...prevPath, location]);\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async ({\n    location,\n    speed\n  }) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', {\n        username,\n        location,\n        speed\n      });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = x => x * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n  const calculateDisplacements = () => {\n    const users = Object.entries(locations);\n    const distances = [];\n    for (let i = 0; i < users.length; i++) {\n      for (let j = i + 1; j < users.length; j++) {\n        const user1 = users[i];\n        const user2 = users[j];\n        const loc1 = user1[1].location;\n        const loc2 = user2[1].location;\n        const distance = haversineDistance(loc1, loc2);\n        distances.push({\n          users: [user1[0], user2[0]],\n          distance\n        });\n      }\n    }\n    return distances;\n  };\n  const Polyline = ({\n    positions\n  }) => {\n    if (positions.length < 2) return null;\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        anchor: [lat1, lng1],\n        offset: [0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: 500,\n          height: 500,\n          viewBox: \"0 0 500 500\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `${50 + (lng2 - lng1) * 100}%`,\n            y2: `${50 + (lat2 - lat1) * 100}%`,\n            stroke: \"red\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, {\n          location\n        }]) => {\n          try {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: location,\n              onClick: () => setSelectedLocation({\n                username: user,\n                location\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, e);\n            return null;\n          }\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation,\n          onClick: () => setSelectedLocation({\n            username,\n            location: currentLocation\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), selectedLocation && /*#__PURE__*/_jsxDEV(Overlay, {\n          anchor: selectedLocation.location,\n          offset: [120, 79],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              padding: '5px',\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 63\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 113\n            }, this), \"Speed: \", locations[selectedLocation.username].speed.toFixed(2), \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), \" \", speed.toFixed(2), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Displacements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: calculateDisplacements().map((dist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [dist.users[0], \" to \", dist.users[1], \": \", dist.distance.toFixed(2), \" km\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LG3f9QyjxymO3wWqfQwUz1cfRo4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","speed","setSpeed","path","setPath","selectedLocation","setSelectedLocation","fetchLocations","response","get","updatedLocations","Object","entries","data","forEach","user","location","JSON","parse","userLocation","error","console","interval","setInterval","clearInterval","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","handleUpdateLocation","prevPath","clearWatch","haversineDistance","lat1","lon1","lat2","lon2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","calculateDisplacements","users","distances","i","length","j","user1","user2","loc1","loc2","distance","push","Polyline","positions","lines","slice","map","index","lng1","lng2","anchor","offset","children","width","height","viewBox","style","top","left","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","defaultCenter","defaultZoom","background","padding","border","toFixed","dist","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        const updatedLocations = {};\n        Object.entries(response.data).forEach(([user, data]) => {\n          const { location, speed } = JSON.parse(data);\n          updatedLocations[user] = { location: JSON.parse(location), speed };\n        });\n        setLocations(updatedLocations);\n\n        if (loggedIn) {\n          const userLocation = updatedLocations[username];\n          if (userLocation) {\n            setCurrentLocation(userLocation.location);\n            setSpeed(userLocation.speed);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude, speed } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation({ location, speed });\n            setCurrentLocation(location);\n            setSpeed(speed);\n            setPath(prevPath => [...prevPath, location]);\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async ({ location, speed }) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', { username, location, speed });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = (x) => (x * Math.PI) / 180;\n    const R = 6371;\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  };\n\n  const calculateDisplacements = () => {\n    const users = Object.entries(locations);\n    const distances = [];\n\n    for (let i = 0; i < users.length; i++) {\n      for (let j = i + 1; j < users.length; j++) {\n        const user1 = users[i];\n        const user2 = users[j];\n        const loc1 = user1[1].location;\n        const loc2 = user2[1].location;\n        const distance = haversineDistance(loc1, loc2);\n        distances.push({\n          users: [user1[0], user2[0]],\n          distance\n        });\n      }\n    }\n\n    return distances;\n  };\n\n  const Polyline = ({ positions }) => {\n    if (positions.length < 2) return null;\n\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n\n      return (\n        <Overlay key={index} anchor={[lat1, lng1]} offset={[0, 0]}>\n          <svg width={500} height={500} viewBox=\"0 0 500 500\" style={{ position: 'absolute', top: 0, left: 0 }}>\n            <line\n              x1=\"50%\"\n              y1=\"50%\"\n              x2={`${50 + (lng2 - lng1) * 100}%`}\n              y2={`${50 + (lat2 - lat1) * 100}%`}\n              stroke=\"red\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        </Overlay>\n      );\n    });\n\n    return <>{lines}</>;\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, { location }]) => {\n              try {\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={location}\n                    onClick={() => setSelectedLocation({ username: user, location })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, e);\n                return null;\n              }\n            })}\n            <Marker width={50} anchor={currentLocation} onClick={() => setSelectedLocation({ username, location: currentLocation })} />\n            <Polyline positions={path} />\n            {selectedLocation && (\n              <Overlay anchor={selectedLocation.location} offset={[120, 79]}>\n                <div style={{ background: 'white', padding: '5px', border: '1px solid black' }}>\n                  <strong>{selectedLocation.username}</strong><br />\n                  Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}<br />\n                  Speed: {locations[selectedLocation.username].speed.toFixed(2)} m/s\n                </div>\n              </Overlay>\n            )}\n          </Map>\n          <div>\n            <strong>Current Speed:</strong> {speed.toFixed(2)} m/s\n          </div>\n          <div>\n            <h3>Displacements</h3>\n            <ul>\n              {calculateDisplacements().map((dist, index) => (\n                <li key={index}>\n                  {dist.users[0]} to {dist.users[1]}: {dist.distance.toFixed(2)} km\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}