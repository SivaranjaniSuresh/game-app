{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            const locationData = JSON.parse(userLocation.location);\n            setCurrentLocation(locationData);\n            setSpeed(userLocation.speed);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude,\n            speed\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation(location, speed);\n          setCurrentLocation(location);\n          setSpeed(speed);\n          setPath(prevPath => [...prevPath, location]);\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async (location, speed) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', {\n        username,\n        location,\n        speed\n      });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = x => x * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n  const calculateDisplacements = () => {\n    const users = Object.entries(locations);\n    const distances = [];\n    for (let i = 0; i < users.length; i++) {\n      for (let j = i + 1; j < users.length; j++) {\n        const user1 = users[i];\n        const user2 = users[j];\n        try {\n          const loc1 = JSON.parse(user1[1].location);\n          const loc2 = JSON.parse(user2[1].location);\n          const distance = haversineDistance(loc1, loc2);\n          distances.push({\n            users: [user1[0], user2[0]],\n            distance\n          });\n        } catch (error) {\n          console.error(`Error parsing location for users ${user1[0]} or ${user2[0]}`, error);\n        }\n      }\n    }\n    return distances;\n  };\n  const Polyline = ({\n    positions\n  }) => {\n    if (positions.length < 2) return null;\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        anchor: [lat1, lng1],\n        offset: [0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: 500,\n          height: 500,\n          viewBox: \"0 0 500 500\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `${50 + (lng2 - lng1) * 100}%`,\n            y2: `${50 + (lat2 - lat1) * 100}%`,\n            stroke: \"red\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, data]) => {\n          try {\n            const [lat, lng] = JSON.parse(data.location);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: [lat, lng],\n              onClick: () => setSelectedLocation({\n                username: user,\n                location: [lat, lng],\n                speed: data.speed\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, data.location, e);\n            return null;\n          }\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation,\n          onClick: () => setSelectedLocation({\n            username,\n            location: currentLocation,\n            speed\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 51\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 101\n            }, this), \"Speed: \", selectedLocation.speed ? selectedLocation.speed.toFixed(2) : 'N/A', \" m/s\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), \" \", speed.toFixed(2), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Displacements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: calculateDisplacements().map((dist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [dist.users[0], \" to \", dist.users[1], \": \", dist.distance.toFixed(2), \" km\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Speeds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(locations).map(([user, data]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user, \": \", data.speed ? data.speed.toFixed(2) : 'N/A', \" m/s\"]\n          }, user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LG3f9QyjxymO3wWqfQwUz1cfRo4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","speed","setSpeed","path","setPath","selectedLocation","setSelectedLocation","fetchLocations","response","get","data","userLocation","locationData","JSON","parse","location","error","console","interval","setInterval","clearInterval","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","handleUpdateLocation","prevPath","clearWatch","haversineDistance","lat1","lon1","lat2","lon2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","calculateDisplacements","users","Object","entries","distances","i","length","j","user1","user2","loc1","loc2","distance","push","Polyline","positions","lines","slice","map","index","lng1","lng2","anchor","offset","children","width","height","viewBox","style","top","left","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","defaultCenter","defaultZoom","user","lat","lng","toFixed","dist","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            const locationData = JSON.parse(userLocation.location);\n            setCurrentLocation(locationData);\n            setSpeed(userLocation.speed);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude, speed } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation(location, speed);\n            setCurrentLocation(location);\n            setSpeed(speed);\n            setPath(prevPath => [...prevPath, location]);\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async (location, speed) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', { username, location, speed });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = (x) => (x * Math.PI) / 180;\n    const R = 6371;\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c;\n  };\n\n  const calculateDisplacements = () => {\n    const users = Object.entries(locations);\n    const distances = [];\n\n    for (let i = 0; i < users.length; i++) {\n      for (let j = i + 1; j < users.length; j++) {\n        const user1 = users[i];\n        const user2 = users[j];\n        try {\n          const loc1 = JSON.parse(user1[1].location);\n          const loc2 = JSON.parse(user2[1].location);\n          const distance = haversineDistance(loc1, loc2);\n          distances.push({\n            users: [user1[0], user2[0]],\n            distance\n          });\n        } catch (error) {\n          console.error(`Error parsing location for users ${user1[0]} or ${user2[0]}`, error);\n        }\n      }\n    }\n\n    return distances;\n  };\n\n  const Polyline = ({ positions }) => {\n    if (positions.length < 2) return null;\n\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n\n      return (\n        <Overlay key={index} anchor={[lat1, lng1]} offset={[0, 0]}>\n          <svg width={500} height={500} viewBox=\"0 0 500 500\" style={{ position: 'absolute', top: 0, left: 0 }}>\n            <line\n              x1=\"50%\"\n              y1=\"50%\"\n              x2={`${50 + (lng2 - lng1) * 100}%`}\n              y2={`${50 + (lat2 - lat1) * 100}%`}\n              stroke=\"red\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        </Overlay>\n      );\n    });\n\n    return <>{lines}</>;\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, data]) => {\n              try {\n                const [lat, lng] = JSON.parse(data.location);\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={[lat, lng]}\n                    onClick={() => setSelectedLocation({ username: user, location: [lat, lng], speed: data.speed })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, data.location, e);\n                return null;\n              }\n            })}\n            <Marker width={50} anchor={currentLocation} onClick={() => setSelectedLocation({ username, location: currentLocation, speed })} />\n            <Polyline positions={path} />\n            <div>\n  {selectedLocation && (\n    <>\n      <strong>{selectedLocation.username}</strong><br />\n      Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}<br />\n      Speed: {selectedLocation.speed ? selectedLocation.speed.toFixed(2) : 'N/A'} m/s\n    </>\n  )}\n</div>\n\n          </Map>\n          <div>\n            <strong>Current Speed:</strong> {speed.toFixed(2)} m/s\n          </div>\n          <div>\n            <h3>Displacements</h3>\n            <ul>\n              {calculateDisplacements().map((dist, index) => (\n                <li key={index}>\n                  {dist.users[0]} to {dist.users[1]}: {dist.distance.toFixed(2)} km\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div>\n            <h3>User Speeds</h3>\n            <ul>\n              {Object.entries(locations).map(([user, data]) => (\n                <li key={user}>\n                  {user}: {data.speed ? data.speed.toFixed(2) : 'N/A'} m/s\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}