{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Desktop/CSYE7220/game-app/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Polyline } from 'pigeon-maps'; // Assuming Polyline is supported by 'pigeon-maps'\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0); // State to hold current speed\n  const [path, setPath] = useState([]); // State to hold path (list of locations)\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        // Update current location if logged in\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        // Watch position changes after login\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude,\n            speed\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation(location); // Update backend with current location\n          setCurrentLocation(location); // Update frontend state with current location\n          setSpeed(speed); // Update frontend state with current speed\n          setPath(prevPath => [...prevPath, location]); // Append current location to path\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n\n        // Cleanup function to clear watchPosition when component unmounts or on logout\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async location => {\n    try {\n      await axios.post('http://localhost:5000/update_location', {\n        username,\n        location\n      });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, loc]) => {\n          const [lat, lng] = JSON.parse(loc);\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            width: 50,\n            anchor: [lat, lng]\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), path.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), \" \", speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dwhugGTpLPuX5iVfs/gbd5loDv0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Polyline","axios","jsxDEV","_jsxDEV","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","speed","setSpeed","path","setPath","fetchLocations","response","get","data","userLocation","JSON","parse","error","console","interval","setInterval","clearInterval","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","location","handleUpdateLocation","prevPath","clearWatch","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","defaultCenter","defaultZoom","Object","entries","map","user","loc","lat","lng","width","anchor","length","positions","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Desktop/CSYE7220/game-app/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Polyline } from 'pigeon-maps'; // Assuming Polyline is supported by 'pigeon-maps'\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0); // State to hold current speed\n  const [path, setPath] = useState([]); // State to hold path (list of locations)\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        // Update current location if logged in\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        // Watch position changes after login\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude, speed } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation(location); // Update backend with current location\n            setCurrentLocation(location);   // Update frontend state with current location\n            setSpeed(speed);                // Update frontend state with current speed\n            setPath(prevPath => [...prevPath, location]); // Append current location to path\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        // Cleanup function to clear watchPosition when component unmounts or on logout\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async (location) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', { username, location });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, loc]) => {\n              const [lat, lng] = JSON.parse(loc);\n              return (\n                <Marker key={user} width={50} anchor={[lat, lng]} />\n              );\n            })}\n            <Marker width={50} anchor={currentLocation} />\n            {path.length > 1 && <Polyline positions={path} />}\n          </Map>\n          <div>\n            <strong>Current Speed:</strong> {speed} m/s\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}