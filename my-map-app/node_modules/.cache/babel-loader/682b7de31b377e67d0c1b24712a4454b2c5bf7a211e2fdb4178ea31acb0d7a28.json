{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude,\n            speed\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation(location);\n          setCurrentLocation(location);\n          setSpeed(speed);\n          setPath(prevPath => [...prevPath, location]);\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async location => {\n    try {\n      await axios.post('http://localhost:5000/update_location', {\n        username,\n        location\n      });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  const Polyline = ({\n    positions\n  }) => {\n    if (positions.length < 2) return null;\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        anchor: [lat1, lng1],\n        offset: [0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: 500,\n          height: 500,\n          viewBox: \"0 0 500 500\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `${50 + (lng2 - lng1) * 100}%`,\n            y2: `${50 + (lat2 - lat1) * 100}%`,\n            stroke: \"red\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, loc]) => {\n          try {\n            const [lat, lng] = JSON.parse(loc);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: [lat, lng],\n              onClick: () => setSelectedLocation({\n                username: user,\n                location: [lat, lng]\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, loc, e);\n            return null;\n          }\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation,\n          onClick: () => setSelectedLocation({\n            username,\n            location: currentLocation\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), selectedLocation && /*#__PURE__*/_jsxDEV(Overlay, {\n          anchor: selectedLocation.location,\n          offset: [120, 79],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              padding: '5px',\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 63\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), \" \", speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LG3f9QyjxymO3wWqfQwUz1cfRo4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","speed","setSpeed","path","setPath","selectedLocation","setSelectedLocation","fetchLocations","response","get","data","userLocation","JSON","parse","error","console","interval","setInterval","clearInterval","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","location","handleUpdateLocation","prevPath","clearWatch","Polyline","positions","length","lines","slice","map","index","lat1","lng1","lat2","lng2","anchor","offset","children","width","height","viewBox","style","top","left","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","defaultCenter","defaultZoom","Object","entries","user","loc","lat","lng","background","padding","border","toFixed","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude, speed } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation(location);\n            setCurrentLocation(location);\n            setSpeed(speed);\n            setPath(prevPath => [...prevPath, location]);\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async (location) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', { username, location });\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  const Polyline = ({ positions }) => {\n    if (positions.length < 2) return null;\n\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n\n      return (\n        <Overlay key={index} anchor={[lat1, lng1]} offset={[0, 0]}>\n          <svg width={500} height={500} viewBox=\"0 0 500 500\" style={{ position: 'absolute', top: 0, left: 0 }}>\n            <line\n              x1=\"50%\"\n              y1=\"50%\"\n              x2={`${50 + (lng2 - lng1) * 100}%`}\n              y2={`${50 + (lat2 - lat1) * 100}%`}\n              stroke=\"red\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        </Overlay>\n      );\n    });\n\n    return <>{lines}</>;\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, loc]) => {\n              try {\n                const [lat, lng] = JSON.parse(loc);\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={[lat, lng]}\n                    onClick={() => setSelectedLocation({ username: user, location: [lat, lng] })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, loc, e);\n                return null;\n              }\n            })}\n            <Marker width={50} anchor={currentLocation} onClick={() => setSelectedLocation({ username, location: currentLocation })} />\n            <Polyline positions={path} />\n            {selectedLocation && (\n              <Overlay anchor={selectedLocation.location} offset={[120, 79]}>\n                <div style={{ background: 'white', padding: '5px', border: '1px solid black' }}>\n                  <strong>{selectedLocation.username}</strong><br />\n                  Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}\n                </div>\n              </Overlay>\n            )}\n          </Map>\n          <div>\n            <strong>Current Speed:</strong> {speed} m/s\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}