{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Downloads/game-app 2/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [distances, setDistances] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025; // Random latitude within 0.025 degrees around current location\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025; // Random longitude within 0.025 degrees around current location\n        randomItems.push({\n          id: i,\n          location: [lat, lng]\n        });\n      }\n      setItems(randomItems);\n    };\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n  useEffect(() => {\n    const calculateDistances = () => {\n      const distancesMap = {};\n      Object.entries(locations).forEach(([user1, loc1]) => {\n        Object.entries(locations).forEach(([user2, loc2]) => {\n          if (user1 !== user2) {\n            const [lat1, lng1] = JSON.parse(loc1);\n            const [lat2, lng2] = JSON.parse(loc2);\n            const distance = haversineDistance([lat1, lng1], [lat2, lng2]);\n            distancesMap[`${user1}-${user2}`] = distance;\n          }\n        });\n      });\n      setDistances(distancesMap);\n    };\n    if (loggedIn) {\n      calculateDistances();\n    }\n  }, [loggedIn, locations]);\n  useEffect(() => {\n    const fetchLeaderboard = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/leaderboard');\n        setLeaderboard(response.data);\n      } catch (error) {\n        console.error(\"Error fetching leaderboard\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLeaderboard();\n    }\n  }, [loggedIn]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation(location);\n          setCurrentLocation(location);\n          setPath(prevPath => [...prevPath, location]);\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async location => {\n    try {\n      const response = await axios.post('http://localhost:5000/update_location', {\n        username,\n        location\n      });\n      checkItemCollection(location);\n      setLeaderboard(response.data.leaderboard);\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  const checkItemCollection = currentLocation => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 0.02; // 20 meters threshold for collecting items\n    });\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n      fetchLeaderboard(); // Update leaderboard after collecting items\n    }\n  };\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = x => x * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c * 1000; // Distance in meters\n  };\n  const Polyline = ({\n    positions\n  }) => {\n    if (positions.length < 2) return null;\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        anchor: [lat1, lng1],\n        offset: [0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: 500,\n          height: 500,\n          viewBox: \"0 0 500 500\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `${50 + (lng2 - lng1) * 100}%`,\n            y2: `${50 + (lat2 - lat1) * 100}%`,\n            stroke: \"red\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, loc]) => {\n          try {\n            const [lat, lng] = JSON.parse(loc);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: [lat, lng],\n              onClick: () => setSelectedLocation({\n                username: user,\n                location: [lat, lng]\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, loc, e);\n            return null;\n          }\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation,\n          onClick: () => setSelectedLocation({\n            username,\n            location: currentLocation\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), items.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: item.location,\n          color: \"blue\",\n          onClick: () => {\n            alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n            setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), selectedLocation && selectedLocation.location && /*#__PURE__*/_jsxDEV(Overlay, {\n          anchor: selectedLocation.location,\n          offset: [120, 79],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              padding: '5px',\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 63\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: leaderboard.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.username, \": \", user.collected_items, \" items\"]\n          }, user.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"w4n9Uw3K1d5qOn3jSDqmGMIEpxU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","path","setPath","selectedLocation","setSelectedLocation","items","setItems","distances","setDistances","leaderboard","setLeaderboard","fetchLocations","response","get","data","userLocation","JSON","parse","error","console","interval","setInterval","clearInterval","generateRandomItems","randomItems","i","lat","Math","random","lng","push","id","location","calculateDistances","distancesMap","Object","entries","forEach","user1","loc1","user2","loc2","lat1","lng1","lat2","lng2","distance","haversineDistance","fetchLeaderboard","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","handleUpdateLocation","prevPath","clearWatch","checkItemCollection","collectedItems","filter","item","length","prevItems","includes","lon1","lon2","toRad","x","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","Polyline","positions","lines","slice","map","index","anchor","offset","children","width","height","viewBox","style","top","left","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","defaultCenter","defaultZoom","user","loc","color","toFixed","background","padding","border","collected_items","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Downloads/game-app 2/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [distances, setDistances] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025; // Random latitude within 0.025 degrees around current location\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025; // Random longitude within 0.025 degrees around current location\n        randomItems.push({ id: i, location: [lat, lng] });\n      }\n      setItems(randomItems);\n    };\n\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n\n  useEffect(() => {\n    const calculateDistances = () => {\n      const distancesMap = {};\n\n      Object.entries(locations).forEach(([user1, loc1]) => {\n        Object.entries(locations).forEach(([user2, loc2]) => {\n          if (user1 !== user2) {\n            const [lat1, lng1] = JSON.parse(loc1);\n            const [lat2, lng2] = JSON.parse(loc2);\n            const distance = haversineDistance([lat1, lng1], [lat2, lng2]);\n            distancesMap[`${user1}-${user2}`] = distance;\n          }\n        });\n      });\n\n      setDistances(distancesMap);\n    };\n\n    if (loggedIn) {\n      calculateDistances();\n    }\n  }, [loggedIn, locations]);\n\n  useEffect(() => {\n    const fetchLeaderboard = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/leaderboard');\n        setLeaderboard(response.data);\n      } catch (error) {\n        console.error(\"Error fetching leaderboard\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLeaderboard();\n    }\n  }, [loggedIn]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation(location);\n            setCurrentLocation(location);\n            setPath(prevPath => [...prevPath, location]);\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async (location) => {\n    try {\n      const response = await axios.post('http://localhost:5000/update_location', { username, location });\n      checkItemCollection(location);\n      setLeaderboard(response.data.leaderboard);\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  const checkItemCollection = (currentLocation) => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 0.02; // 20 meters threshold for collecting items\n    });\n\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n      fetchLeaderboard(); // Update leaderboard after collecting items\n    }\n  };\n\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = (x) => (x * Math.PI) / 180;\n    const R = 6371;\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c * 1000; // Distance in meters\n  };\n\n  const Polyline = ({ positions }) => {\n    if (positions.length < 2) return null;\n\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n\n      return (\n        <Overlay key={index} anchor={[lat1, lng1]} offset={[0, 0]}>\n          <svg width={500} height={500} viewBox=\"0 0 500 500\" style={{ position: 'absolute', top: 0, left: 0 }}>\n            <line\n              x1=\"50%\"\n              y1=\"50%\"\n              x2={`${50 + (lng2 - lng1) * 100}%`}\n              y2={`${50 + (lat2 - lat1) * 100}%`}\n              stroke=\"red\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        </Overlay>\n      );\n    });\n\n    return <>{lines}</>;\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, loc]) => {\n              try {\n                const [lat, lng] = JSON.parse(loc);\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={[lat, lng]}\n                    onClick={() => setSelectedLocation({ username: user, location: [lat, lng] })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, loc, e);\n                return null;\n              }\n            })}\n            <Marker width={50} anchor={currentLocation} onClick={() => setSelectedLocation({ username, location: currentLocation })} />\n            {items.map(item => (\n              <Marker\n                key={item.id}\n                width={50}\n                anchor={item.location}\n                color=\"blue\"\n                onClick={() => {\n                  alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n                  setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n                }}\n              />\n            ))}\n            <Polyline positions={path} />\n\n            {selectedLocation && selectedLocation.location && (\n              <Overlay anchor={selectedLocation.location} offset={[120, 79]}>\n                <div style={{ background: 'white', padding: '5px', border: '1px solid black' }}>\n                  <strong>{selectedLocation.username}</strong><br />\n                  Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}\n                </div>\n              </Overlay>\n            )}\n          </Map>\n\n          {/* Leaderboard */}\n          <div>\n            <h3>Leaderboard</h3>\n            <ul>\n              {leaderboard.map(user => (\n                <li key={user.username}>{user.username}: {user.collected_items} items</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}