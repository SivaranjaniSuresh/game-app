{"ast":null,"code":"var _jsxFileName = \"/Users/hinalpatel/Downloads/game-app 4/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\n// Proposed changes to App.js\n\n// 1. Refactor the useEffect hooks to reduce redundancy and improve readability.\n// 2. Use async/await consistently for all asynchronous operations.\n// 3. Introduce error handling for geolocation to improve user experience.\n// 4. Optimize the haversineDistance function for better performance.\n// 5. Add comments for clarity and maintainability.\n\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport './App.css'; // Ensure CSS is properly imported for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [distances, setDistances] = useState({});\n  const [collectedItemsCount, setCollectedItemsCount] = useState({});\n\n  // Fetch locations periodically if logged in\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  // Generate random items around the current location\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025;\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025;\n        randomItems.push({\n          id: i,\n          location: [lat, lng]\n        });\n      }\n      setItems(randomItems);\n    };\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n\n  // Calculate distances between users\n  useEffect(() => {\n    const calculateDistances = () => {\n      const distancesMap = {};\n      Object.entries(locations).forEach(([user1, loc1]) => {\n        Object.entries(locations).forEach(([user2, loc2]) => {\n          if (user1 !== user2) {\n            const [lat1, lng1] = JSON.parse(loc1);\n            const [lat2, lng2] = JSON.parse(loc2);\n            const distance = haversineDistance([lat1, lng1], [lat2, lng2]);\n            distancesMap[`${user1}-${user2}`] = distance;\n          }\n        });\n      });\n      setDistances(distancesMap);\n    };\n    if (loggedIn) {\n      calculateDistances();\n    }\n  }, [loggedIn, locations]);\n\n  // Update user location upon login success\n  useEffect(() => {\n    const handleLoginSuccess = async position => {\n      try {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const location = [latitude, longitude];\n        await axios.post('http://localhost:5000/update_location', {\n          username,\n          location\n        });\n        setCurrentLocation(location);\n        setPath(prevPath => [...prevPath, location]);\n        checkItemCollection(location);\n      } catch (error) {\n        console.error(\"Error updating location\", error);\n      }\n    };\n    if (loggedIn) {\n      const watchId = navigator.geolocation.watchPosition(handleLoginSuccess, error => {\n        console.error(\"Error getting current position\", error);\n      });\n      return () => navigator.geolocation.clearWatch(watchId);\n    }\n  }, [loggedIn, username]);\n\n  // Register new user\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  // Handle user login\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  // Check if the user has collected any items\n  const checkItemCollection = currentLocation => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 20; // 20 meters threshold for collecting items\n    });\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n      const newCount = {\n        ...collectedItemsCount\n      };\n      newCount[username] = (newCount[username] || 0) + collectedItems.length;\n      setCollectedItemsCount(newCount);\n    }\n  };\n\n  // Calculate distance between two points on Earth\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = x => x * Math.PI / 180;\n    const R = 6371; // Earth's radius in kilometers\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c * 1000; // Distance in meters\n  };\n\n  // Render the application UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"game-app-heading\",\n        children: \"Game-App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, loc]) => {\n          try {\n            const [lat, lng] = JSON.parse(loc);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: [lat, lng],\n              onClick: () => setSelectedLocation({\n                username: user,\n                location: [lat, lng]\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, loc, e);\n            return null;\n          }\n        }), items.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: item.location,\n          color: \"blue\",\n          onClick: () => {\n            alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n            setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n            const newCount = {\n              ...collectedItemsCount\n            };\n            newCount[username] = (newCount[username] || 0) + 1;\n            setCollectedItemsCount(newCount);\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-section leaderboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Leaderboard - Items Collected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(collectedItemsCount).map(([user, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [user, \": \", count, \" item(s)\"]\n            }, user, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), selectedLocation && selectedLocation.location && /*#__PURE__*/_jsxDEV(Overlay, {\n          anchor: selectedLocation.location,\n          offset: [120, 79],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              padding: '5px',\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 63\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-section distances-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Distances:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(distances).map(([key, distance]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${key}: ${distance.toFixed(2)} meters`\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5GR3dwIxOBbIiBvf7QuURa1CqFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","path","setPath","selectedLocation","setSelectedLocation","items","setItems","distances","setDistances","collectedItemsCount","setCollectedItemsCount","fetchLocations","response","get","data","userLocation","JSON","parse","error","console","interval","setInterval","clearInterval","generateRandomItems","randomItems","i","lat","Math","random","lng","push","id","location","calculateDistances","distancesMap","Object","entries","forEach","user1","loc1","user2","loc2","lat1","lng1","lat2","lng2","distance","haversineDistance","handleLoginSuccess","position","latitude","longitude","coords","post","prevPath","checkItemCollection","watchId","navigator","geolocation","watchPosition","clearWatch","handleRegister","alert","handleLogin","status","collectedItems","filter","item","length","prevItems","includes","newCount","lon1","lon2","toRad","x","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","height","defaultCenter","defaultZoom","map","user","loc","width","anchor","color","toFixed","count","offset","style","background","padding","border","key","_c","$RefreshReg$"],"sources":["/Users/hinalpatel/Downloads/game-app 4/my-map-app/src/App.js"],"sourcesContent":["// Proposed changes to App.js\n\n// 1. Refactor the useEffect hooks to reduce redundancy and improve readability.\n// 2. Use async/await consistently for all asynchronous operations.\n// 3. Introduce error handling for geolocation to improve user experience.\n// 4. Optimize the haversineDistance function for better performance.\n// 5. Add comments for clarity and maintainability.\n\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport './App.css'; // Ensure CSS is properly imported for styling\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  const [distances, setDistances] = useState({});\n  const [collectedItemsCount, setCollectedItemsCount] = useState({});\n\n  // Fetch locations periodically if logged in\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  // Generate random items around the current location\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025;\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025;\n        randomItems.push({ id: i, location: [lat, lng] });\n      }\n      setItems(randomItems);\n    };\n\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n\n  // Calculate distances between users\n  useEffect(() => {\n    const calculateDistances = () => {\n      const distancesMap = {};\n\n      Object.entries(locations).forEach(([user1, loc1]) => {\n        Object.entries(locations).forEach(([user2, loc2]) => {\n          if (user1 !== user2) {\n            const [lat1, lng1] = JSON.parse(loc1);\n            const [lat2, lng2] = JSON.parse(loc2);\n            const distance = haversineDistance([lat1, lng1], [lat2, lng2]);\n            distancesMap[`${user1}-${user2}`] = distance;\n          }\n        });\n      });\n\n      setDistances(distancesMap);\n    };\n\n    if (loggedIn) {\n      calculateDistances();\n    }\n  }, [loggedIn, locations]);\n\n  // Update user location upon login success\n  useEffect(() => {\n    const handleLoginSuccess = async (position) => {\n      try {\n        const { latitude, longitude } = position.coords;\n        const location = [latitude, longitude];\n        await axios.post('http://localhost:5000/update_location', { username, location });\n        setCurrentLocation(location);\n        setPath(prevPath => [...prevPath, location]);\n        checkItemCollection(location);\n      } catch (error) {\n        console.error(\"Error updating location\", error);\n      }\n    };\n\n    if (loggedIn) {\n      const watchId = navigator.geolocation.watchPosition(\n        handleLoginSuccess,\n        (error) => {\n          console.error(\"Error getting current position\", error);\n        }\n      );\n\n      return () => navigator.geolocation.clearWatch(watchId);\n    }\n  }, [loggedIn, username]);\n\n  // Register new user\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  // Handle user login\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  // Check if the user has collected any items\n  const checkItemCollection = (currentLocation) => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 20; // 20 meters threshold for collecting items\n    });\n\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n\n      const newCount = { ...collectedItemsCount };\n      newCount[username] = (newCount[username] || 0) + collectedItems.length;\n      setCollectedItemsCount(newCount);\n    }\n  };\n\n  // Calculate distance between two points on Earth\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = (x) => (x * Math.PI) / 180;\n    const R = 6371; // Earth's radius in kilometers\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c * 1000; // Distance in meters\n  };\n\n  // Render the application UI\n  return (\n    <div className=\"App\">\n      {!loggedIn ? (\n        <div className=\"login-register-container\">\n          <h1 className=\"game-app-heading\">Game-App</h1>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map height={600} defaultCenter={currentLocation} defaultZoom={11}>\n            {Object.entries(locations).map(([user, loc]) => {\n              try {\n                const [lat, lng] = JSON.parse(loc);\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={[lat, lng]}\n                    onClick={() => setSelectedLocation({ username: user, location: [lat, lng] })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, loc, e);\n                return null;\n              }\n            })}\n\n            {items.map(item => (\n              <Marker\n                key={item.id}\n                width={50}\n                anchor={item.location}\n                color=\"blue\"\n                onClick={() => {\n                  alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n                  setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n                  const newCount = { ...collectedItemsCount };\n                  newCount[username] = (newCount[username] || 0) + 1;\n                  setCollectedItemsCount(newCount);\n                }}\n              />\n            ))}\n\n            <div className=\"popup-section leaderboard-section\">\n              <h3>Leaderboard - Items Collected</h3>\n              <ul>\n                {Object.entries(collectedItemsCount).map(([user, count]) => (\n                  <li key={user}>{user}: {count} item(s)</li>\n                \n                ))}\n              </ul>\n            </div>\n\n            {selectedLocation && selectedLocation.location && (\n              <Overlay anchor={selectedLocation.location} offset={[120, 79]}>\n                <div style={{ background: 'white', padding: '5px', border: '1px solid black' }}>\n                  <strong>{selectedLocation.username}</strong><br />\n                  Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}\n                </div>\n              </Overlay>\n            )}\n\n            <div className=\"popup-section distances-section\">\n              <h3>Distances:</h3>\n              <ul>\n                {Object.entries(distances).map(([key, distance]) => (\n                  <li key={key}>{`${key}: ${distance.toFixed(2)} meters`}</li>\n                ))}\n              </ul>\n            </div>\n          </Map>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}