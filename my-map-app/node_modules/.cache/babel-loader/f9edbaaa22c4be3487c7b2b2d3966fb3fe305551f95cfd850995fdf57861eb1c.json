{"ast":null,"code":"var _jsxFileName = \"/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025; // Random latitude within 0.025 degrees around current location\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025; // Random longitude within 0.025 degrees around current location\n        randomItems.push({\n          id: i,\n          location: [lat, lng]\n        });\n      }\n      setItems(randomItems);\n    };\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', {\n        username,\n        password\n      });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n        const watchId = navigator.geolocation.watchPosition(position => {\n          const {\n            latitude,\n            longitude,\n            speed\n          } = position.coords;\n          const location = [latitude, longitude];\n          handleUpdateLocation(location);\n          setCurrentLocation(location);\n          setSpeed(speed);\n          setPath(prevPath => [...prevPath, location]);\n        }, error => {\n          console.error(\"Error getting current position\", error);\n        });\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n  const handleUpdateLocation = async location => {\n    try {\n      await axios.post('http://localhost:5000/update_location', {\n        username,\n        location\n      });\n      checkItemCollection(location);\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n  const checkItemCollection = currentLocation => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 0.02; // 20 meters threshold for collecting items\n    });\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n    }\n  };\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = x => x * Math.PI / 180;\n    const R = 6371;\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c * 1000; // Distance in meters\n  };\n  const Polyline = ({\n    positions\n  }) => {\n    if (positions.length < 2) return null;\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n      return /*#__PURE__*/_jsxDEV(Overlay, {\n        anchor: [lat1, lng1],\n        offset: [0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: 500,\n          height: 500,\n          viewBox: \"0 0 500 500\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50%\",\n            y1: \"50%\",\n            x2: `${50 + (lng2 - lng1) * 100}%`,\n            y2: `${50 + (lat2 - lat1) * 100}%`,\n            stroke: \"red\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lines\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        height: 600,\n        defaultCenter: currentLocation,\n        defaultZoom: 11,\n        children: [Object.entries(locations).map(([user, loc]) => {\n          try {\n            const [lat, lng] = JSON.parse(loc);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              width: 50,\n              anchor: [lat, lng],\n              onClick: () => setSelectedLocation({\n                username: user,\n                location: [lat, lng]\n              })\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this);\n          } catch (e) {\n            console.error(`Error parsing location for user ${user}:`, loc, e);\n            return null;\n          }\n        }), /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: currentLocation,\n          onClick: () => setSelectedLocation({\n            username,\n            location: currentLocation\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), items.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: item.location,\n          color: \"blue\",\n          onClick: () => {\n            alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n            setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), selectedLocation && /*#__PURE__*/_jsxDEV(Overlay, {\n          anchor: selectedLocation.location,\n          offset: [120, 79],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              padding: '5px',\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedLocation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 65\n            }, this), \"Lat: \", selectedLocation.location[0].toFixed(4), \", Lng: \", selectedLocation.location[1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), \" \", speed.toFixed(2), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1iIipUVws0y1Ddup4s1nKDGRm6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Map","Marker","Overlay","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","locations","setLocations","username","setUsername","password","setPassword","loggedIn","setLoggedIn","currentLocation","setCurrentLocation","speed","setSpeed","path","setPath","selectedLocation","setSelectedLocation","items","setItems","fetchLocations","response","get","data","userLocation","JSON","parse","error","console","interval","setInterval","clearInterval","generateRandomItems","randomItems","i","lat","Math","random","lng","push","id","location","handleRegister","post","alert","handleLogin","status","watchId","navigator","geolocation","watchPosition","position","latitude","longitude","coords","handleUpdateLocation","prevPath","clearWatch","checkItemCollection","collectedItems","filter","item","distance","haversineDistance","length","prevItems","includes","lat1","lon1","lat2","lon2","toRad","x","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","Polyline","positions","lines","slice","map","index","lng1","lng2","anchor","offset","children","width","height","viewBox","style","top","left","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","defaultCenter","defaultZoom","Object","entries","user","loc","color","toFixed","background","padding","border","_c","$RefreshReg$"],"sources":["/Users/sivaranjanis/Desktop/CSYE7220/game-app 2/my-map-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Map, Marker, Overlay } from 'pigeon-maps';\nimport axios from 'axios';\n\nconst App = () => {\n  const [locations, setLocations] = useState({});\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState([0, 0]);\n  const [speed, setSpeed] = useState(0);\n  const [path, setPath] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_locations');\n        setLocations(response.data);\n\n        if (loggedIn) {\n          const userLocation = response.data[username];\n          if (userLocation) {\n            setCurrentLocation(JSON.parse(userLocation));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching locations\", error);\n      }\n    };\n\n    if (loggedIn) {\n      fetchLocations();\n      const interval = setInterval(fetchLocations, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [loggedIn, username]);\n\n  useEffect(() => {\n    const generateRandomItems = () => {\n      const randomItems = [];\n      for (let i = 0; i < 5; i++) {\n        const lat = currentLocation[0] + Math.random() * 0.05 - 0.025; // Random latitude within 0.025 degrees around current location\n        const lng = currentLocation[1] + Math.random() * 0.05 - 0.025; // Random longitude within 0.025 degrees around current location\n        randomItems.push({ id: i, location: [lat, lng] });\n      }\n      setItems(randomItems);\n    };\n\n    if (loggedIn) {\n      generateRandomItems();\n    }\n  }, [loggedIn, currentLocation]);\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { username, password });\n      alert('Registration successful!');\n    } catch (error) {\n      console.error(\"Error during registration\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      if (response.data.status === 'success') {\n        setLoggedIn(true);\n\n        const watchId = navigator.geolocation.watchPosition(\n          (position) => {\n            const { latitude, longitude, speed } = position.coords;\n            const location = [latitude, longitude];\n            handleUpdateLocation(location);\n            setCurrentLocation(location);\n            setSpeed(speed);\n            setPath(prevPath => [...prevPath, location]);\n          },\n          (error) => {\n            console.error(\"Error getting current position\", error);\n          }\n        );\n\n        return () => navigator.geolocation.clearWatch(watchId);\n      } else {\n        alert('Login failed!');\n      }\n    } catch (error) {\n      console.error(\"Error during login\", error);\n    }\n  };\n\n  const handleUpdateLocation = async (location) => {\n    try {\n      await axios.post('http://localhost:5000/update_location', { username, location });\n      checkItemCollection(location);\n    } catch (error) {\n      console.error(\"Error updating location\", error);\n    }\n  };\n\n  const checkItemCollection = (currentLocation) => {\n    const collectedItems = items.filter(item => {\n      const distance = haversineDistance(item.location, currentLocation);\n      return distance < 0.02; // 20 meters threshold for collecting items\n    });\n\n    if (collectedItems.length > 0) {\n      alert(`You collected ${collectedItems.length} item(s)!`);\n      setItems(prevItems => prevItems.filter(item => !collectedItems.includes(item)));\n    }\n  };\n\n  const haversineDistance = ([lat1, lon1], [lat2, lon2]) => {\n    const toRad = (x) => (x * Math.PI) / 180;\n    const R = 6371;\n\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c * 1000; // Distance in meters\n  };\n\n  const Polyline = ({ positions }) => {\n    if (positions.length < 2) return null;\n\n    const lines = positions.slice(1).map((position, index) => {\n      const [lat1, lng1] = positions[index];\n      const [lat2, lng2] = position;\n\n      return (\n        <Overlay key={index} anchor={[lat1, lng1]} offset={[0, 0]}>\n          <svg width={500} height={500} viewBox=\"0 0 500 500\" style={{ position: 'absolute', top: 0, left: 0 }}>\n            <line\n              x1=\"50%\"\n              y1=\"50%\"\n              x2={`${50 + (lng2 - lng1) * 100}%`}\n              y2={`${50 + (lat2 - lat1) * 100}%`}\n              stroke=\"red\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        </Overlay>\n      );\n    });\n\n    return <>{lines}</>;\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n          <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n          <button onClick={handleRegister}>Register</button>\n          <button onClick={handleLogin}>Login</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Map</h2>\n          <Map\n            height={600}\n            defaultCenter={currentLocation}\n            defaultZoom={11}\n          >\n            {Object.entries(locations).map(([user, loc]) => {\n              try {\n                const [lat, lng] = JSON.parse(loc);\n                return (\n                  <Marker\n                    key={user}\n                    width={50}\n                    anchor={[lat, lng]}\n                    onClick={() => setSelectedLocation({ username: user, location: [lat, lng] })}\n                  />\n                );\n              } catch (e) {\n                console.error(`Error parsing location for user ${user}:`, loc, e);\n                return null;\n              }\n            })}\n            <Marker width={50} anchor={currentLocation} onClick={() => setSelectedLocation({ username, location: currentLocation })} />\n            {items.map(item => (\n              <Marker\n                key={item.id}\n                width={50}\n                anchor={item.location}\n                color=\"blue\"\n                onClick={() => {\n                  alert(`You found an item at ${item.location[0].toFixed(4)}, ${item.location[1].toFixed(4)}!`);\n                  setItems(prevItems => prevItems.filter(i => i.id !== item.id));\n                }}\n              />\n            ))}\n              <Polyline positions={path} />\n              {selectedLocation && (\n                <Overlay anchor={selectedLocation.location} offset={[120, 79]}>\n                  <div style={{ background: 'white', padding: '5px', border: '1px solid black' }}>\n                    <strong>{selectedLocation.username}</strong><br />\n                    Lat: {selectedLocation.location[0].toFixed(4)}, Lng: {selectedLocation.location[1].toFixed(4)}\n                  </div>\n                </Overlay>\n              )}\n          </Map>\n          <div>\n            <strong>Current Speed:</strong> {speed.toFixed(2)} m/s\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}